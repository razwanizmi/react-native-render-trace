{"version":3,"sources":["../src/index.ts","../src/RenderTrace.tsx"],"sourcesContent":["export {renderTrace} from './RenderTrace';\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport ReactNative from 'react-native';\n\nconst OriginalView = ReactNative.View;\nconst OriginalTouchableOpacity = ReactNative.TouchableOpacity;\n\nenum Colors {\n  transparent = 'transparent',\n  green = '#2ecc71',\n  yellow = '#f1c40f',\n  amber = '#f39c12',\n  red = '#e74c3c',\n}\n\nconst COLOR_MAP = [\n  Colors.transparent,\n  Colors.green,\n  Colors.yellow,\n  Colors.amber,\n];\n\nconst TIMEOUT_MS = 500;\n\nexport function RenderTrace() {\n  const [, forceRender] = useState({});\n\n  const isCountingRef = useRef(true);\n  const renderCountRef = useRef(0);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const getColor = useCallback(() => {\n    const count = renderCountRef.current;\n    return COLOR_MAP[count] || Colors.red;\n  }, []);\n\n  const renderWithoutCount = useCallback(() => {\n    isCountingRef.current = false;\n    forceRender({});\n    isCountingRef.current = true;\n  }, []);\n\n  const handleTimeout = useCallback(() => {\n    if (renderCountRef.current > 0) {\n      renderCountRef.current = 0;\n      renderWithoutCount();\n    }\n  }, []);\n\n  const maybeIncrementCount = useCallback(() => {\n    if (isCountingRef.current) {\n      renderCountRef.current = renderCountRef.current + 1;\n    }\n  }, []);\n\n  useEffect(() => {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(handleTimeout, TIMEOUT_MS);\n\n    return () => clearTimeout(timeoutRef.current);\n  });\n\n  maybeIncrementCount();\n\n  return (\n    <OriginalView\n      style={[styles.colorLayer, {borderColor: getColor()}]}\n      pointerEvents=\"box-none\"\n    />\n  );\n}\n\nconst styles = ReactNative.StyleSheet.create({\n  colorLayer: {\n    borderWidth: 3,\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nexport function traceFor(OriginalComponent: React.ComponentType) {\n  const TraceComponent = ({\n    children,\n    ...props\n  }: React.PropsWithChildren<any>) => {\n    return (\n      <OriginalComponent {...props}>\n        <RenderTrace />\n        {children}\n      </OriginalComponent>\n    );\n  };\n\n  Object.assign(TraceComponent, OriginalComponent);\n\n  return TraceComponent;\n}\n\nexport function renderTrace() {\n  Object.defineProperty(ReactNative, 'View', {\n    value: traceFor(OriginalView),\n  });\n\n  Object.defineProperty(ReactNative, 'TouchableOpacity', {\n    value: traceFor(OriginalTouchableOpacity),\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,mBAA8D;AAC9D,0BAAwB;AAExB,IAAM,eAAe,oBAAAA,QAAY;AACjC,IAAM,2BAA2B,oBAAAA,QAAY;AAU7C,IAAM,YAAY;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,IAAM,aAAa;AAEZ,SAAS,cAAc;AAC5B,QAAM,CAAC,EAAE,WAAW,QAAI,uBAAS,CAAC,CAAC;AAEnC,QAAM,oBAAgB,qBAAO,IAAI;AACjC,QAAM,qBAAiB,qBAAO,CAAC;AAC/B,QAAM,iBAAa,qBAAuB;AAE1C,QAAM,eAAW,0BAAY,MAAM;AACjC,UAAM,QAAQ,eAAe;AAC7B,WAAO,UAAU,KAAK,KAAK;AAAA,EAC7B,GAAG,CAAC,CAAC;AAEL,QAAM,yBAAqB,0BAAY,MAAM;AAC3C,kBAAc,UAAU;AACxB,gBAAY,CAAC,CAAC;AACd,kBAAc,UAAU;AAAA,EAC1B,GAAG,CAAC,CAAC;AAEL,QAAM,oBAAgB,0BAAY,MAAM;AACtC,QAAI,eAAe,UAAU,GAAG;AAC9B,qBAAe,UAAU;AACzB,yBAAmB;AAAA,IACrB;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,QAAM,0BAAsB,0BAAY,MAAM;AAC5C,QAAI,cAAc,SAAS;AACzB,qBAAe,UAAU,eAAe,UAAU;AAAA,IACpD;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,8BAAU,MAAM;AACd,iBAAa,WAAW,OAAO;AAC/B,eAAW,UAAU,WAAW,eAAe,UAAU;AAEzD,WAAO,MAAM,aAAa,WAAW,OAAO;AAAA,EAC9C,CAAC;AAED,sBAAoB;AAEpB,SACE,6BAAAC,QAAA;AAAA,IAAC;AAAA;AAAA,MACC,OAAO,CAAC,OAAO,YAAY,EAAC,aAAa,SAAS,EAAC,CAAC;AAAA,MACpD,eAAc;AAAA;AAAA,EAChB;AAEJ;AAEA,IAAM,SAAS,oBAAAC,QAAY,WAAW,OAAO;AAAA,EAC3C,YAAY;AAAA,IACV,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,UAAU;AAAA,IACV,OAAO;AAAA,IACP,KAAK;AAAA,EACP;AACF,CAAC;AAEM,SAAS,SAAS,mBAAwC;AAC/D,QAAM,iBAAiB,CAAC;AAAA,IACtB;AAAA,IACA,GAAG;AAAA,EACL,MAAoC;AAClC,WACE,6BAAAD,QAAA,cAAC,qBAAmB,GAAG,SACrB,6BAAAA,QAAA,cAAC,iBAAY,GACZ,QACH;AAAA,EAEJ;AAEA,SAAO,OAAO,gBAAgB,iBAAiB;AAE/C,SAAO;AACT;AAEO,SAAS,cAAc;AAC5B,SAAO,eAAe,oBAAAC,SAAa,QAAQ;AAAA,IACzC,OAAO,SAAS,YAAY;AAAA,EAC9B,CAAC;AAED,SAAO,eAAe,oBAAAA,SAAa,oBAAoB;AAAA,IACrD,OAAO,SAAS,wBAAwB;AAAA,EAC1C,CAAC;AACH;","names":["ReactNative","React","ReactNative"]}